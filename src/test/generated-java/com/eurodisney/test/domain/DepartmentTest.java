/*
 * (c) Copyright 2005-2014 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.eurodisney.test.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import com.eurodisney.test.util.ValueGenerator;

/**
 * Basic tests for Department
 */
@SuppressWarnings("unused")
public class DepartmentTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Department model = new Department();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        Department model = new Department();
        model.setId(ValueGenerator.getUniqueInteger());
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  Department.idDisney ==> Disney.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setIdDisney() {
        Department many = new Department();

        // init
        Disney one = new Disney();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setIdDisney(one);

        // make sure it is propagated properly
        assertThat(many.getIdDisney()).isEqualTo(one);

        // now set it to back to null
        many.setIdDisney(null);

        // make sure null is propagated properly
        assertThat(many.getIdDisney()).isNull();
    }

    /*
     public void equalsUsingPk() {
     Department model1 = new Department();
     Department model2 = new Department();

     Integer id = ValueGenerator.getUniqueInteger();
     model1.setId(id);
     model2.setId(id);

     model1.setName("a");
     model2.setName("a");
     assertThat(model1.isIdSet()).isTrue();
     assertThat(model2.isIdSet()).isTrue();
     assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
     assertThat(model1).isEqualTo(model2);
     assertThat(model2).isEqualTo(model1);
     }
     */
}